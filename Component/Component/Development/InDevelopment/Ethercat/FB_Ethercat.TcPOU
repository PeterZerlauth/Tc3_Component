<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Ethercat" Id="{26632774-44df-0f9a-1531-badc4b6ed605}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Ethercat EXTENDS FB_Component
VAR_INPUT
    NetId 			AT %I*:		T_AmsNetIdArr;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	sNetId:						T_AmsNetID;
	nSlaves:					UINT;
	fbGetMasterState: 			FB_EcGetMasterDevState;
	fbGetSlaveStates:			FB_EcGetAllSlaveStates;
	fbGetConfSlaves: 			FB_EcGetConfSlaves;
	fbGetSlaveCount:			FB_EcGetSlaveCount;
	fbGetSlaveAddresses:		FB_EcGetAllSlaveAddr;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
	]]></ST>
    </Implementation>
    <Method Name="FB_exit" Id="{32b88d2f-9681-0500-1b45-7ff197d7c043}">
      <Declaration><![CDATA[METHOD FB_exit : BOOL
VAR_INPUT
	bInCopyCode : BOOL; // if TRUE, the exit method is called for exiting an instance that is copied afterwards (online change).
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF fbGetSlaveStates.pStateBuf <> 0 THEN
	__DELETE(fbGetSlaveStates.pStateBuf);
END_IF
IF fbGetConfSlaves.pArrEcConfSlaveInfo <> 0 THEN
	__DELETE(fbGetConfSlaves.pArrEcConfSlaveInfo);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Execute" Id="{2ba98b6e-4256-0860-0cd0-bd9578cd5e7c}">
      <Declaration><![CDATA[METHOD PROTECTED M_Execute : BOOL // Return state complete
VAR_INPUT
END_VAR
VAR
	nIndex:					UINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbGetMasterState(bExecute:= NOT fbGetMasterState.bBusy);
IF fbGetMasterState.bError THEN
	fbEvent.M_Abort('Ethercat master state', '');
END_IF

fbGetSlaveStates(bExecute:= NOT fbGetSlaveStates.bBusy);

FOR nIndex:= 0 TO fbGetSlaveStates.nSlaves -1 DO
	CASE fbGetSlaveStates.pStateBuf^[nIndex].deviceState OF
		EC_DEVICE_STATE_INIT:;
		EC_DEVICE_STATE_PREOP:;
		EC_DEVICE_STATE_BOOTSTRAP:;
		EC_DEVICE_STATE_SAFEOP:;
		EC_DEVICE_STATE_OP:;
	END_CASE
END_FOR

fbGetSlaveAddresses(bExecute:= TRUE);

fbGetConfSlaves(bExecute:= TRUE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{429ce4f6-d8ad-000d-1883-5a642980062d}">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL // Return state complete
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
sNetId:= F_CreateAmsNetId(NetId);

IF F_GetMappingStatus(ADR(NetId), SIZEOF(T_AmsNetIdArr)) <> EPlcMappingStatus.MS_Mapped THEN
	fbEvent.M_AddSTRING(sNetId);
	fbEvent.M_Abort('Ethercat master netid not mapped %s', '');
END_IF

fbGetMasterState.sNetId:= sNetId;
fbGetSlaveAddresses.sNetId:= sNetId;
fbGetSlaveStates.sNetId:= sNetId;
fbGetConfSlaves.sNetId:= sNetId;

fbGetSlaveCount.sNetId:= sNetId;
fbGetSlaveCount(bExecute:= TRUE);
IF NOT fbGetSlaveCount.bBusy THEN
	nSlaves:= fbGetSlaveCount.nSlaves;
	
		IF fbGetSlaveStates.pStateBuf = 0 THEN
			IF fbGetSlaveStates.cbBufLen <> 0 THEN
				__DELETE(fbGetSlaveStates.pStateBuf);
			END_IF
			fbGetSlaveStates.cbBufLen:= nSlaves * SIZEOF(Tc2_EtherCAT.ST_EcSlaveState);
			fbGetSlaveStates.pStateBuf:= __NEW(BYTE, fbGetSlaveStates.cbBufLen); 	
		END_IF
		
		IF fbGetConfSlaves.pArrEcConfSlaveInfo = 0 THEN
			IF fbGetConfSlaves.pArrEcConfSlaveInfo <> 0 THEN
				__DELETE(fbGetConfSlaves.pArrEcConfSlaveInfo);
			END_IF
			fbGetConfSlaves.cbBufLen:= nSlaves * SIZEOF(Tc2_EtherCAT.ST_EcSlaveConfigData);
			fbGetConfSlaves.pArrEcConfSlaveInfo:=  __NEW(BYTE, fbGetConfSlaves.cbBufLen);

		END_IF
		
		IF fbGetSlaveAddresses.pAddrBuf = 0 THEN
			IF fbGetSlaveAddresses.pAddrBuf <> 0 THEN
				__DELETE(fbGetSlaveAddresses.pAddrBuf);
			END_IF
			fbGetSlaveAddresses.cbBufLen:= nSlaves * SIZEOF(UINT);
			fbGetSlaveAddresses.pAddrBuf:=  __NEW(BYTE, fbGetSlaveAddresses.cbBufLen);
		END_IF	

	M_Starting:= TRUE;
END_IF










]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Ethercat">
      <LineId Id="96" Count="0" />
      <LineId Id="103" Count="0" />
    </LineIds>
    <LineIds Name="FB_Ethercat.FB_exit">
      <LineId Id="6" Count="2" />
      <LineId Id="10" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Ethercat.M_Execute">
      <LineId Id="6" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="33" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Ethercat.M_Starting">
      <LineId Id="121" Count="1" />
      <LineId Id="116" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="117" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="2" />
      <LineId Id="105" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="79" Count="5" />
      <LineId Id="104" Count="0" />
      <LineId Id="85" Count="3" />
      <LineId Id="126" Count="0" />
      <LineId Id="89" Count="2" />
      <LineId Id="103" Count="0" />
      <LineId Id="97" Count="3" />
      <LineId Id="127" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="93" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="10" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>