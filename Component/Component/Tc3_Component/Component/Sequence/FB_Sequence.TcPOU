<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Sequence" Id="{4b1aa270-5e63-4fbf-b9b1-b64186ed4cc4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Sequence IMPLEMENTS I_Sequence
VAR
	iParent:			I_Component;
	stActual:			ST_Sequence;
	stRestore:			ST_Sequence;
	aHistory:			ARRAY [0..Parameters.nSequence] OF ST_Sequence;
	fbTimeout:			TON;
	fbDelay: 			TON;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://github.com/PeterZerlauth/Tc3_Component
fbTimeout();
fbTimeout.IN:= FALSE;

fbDelay();
fbDelay.IN:= FALSE;
]]></ST>
    </Implementation>
    <Method Name="M_Set" Id="{1679b774-aff9-0900-1b9f-6b982123f170}">
      <Declaration><![CDATA[METHOD PUBLIC M_Set
VAR_INPUT
	nNumber:				INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stActual.nNumber:= nNumber;
stActual.sMessage:= 'M_Set';
MemCpy(ADR(aHistory[1]), ADR(aHistory[0]), SIZEOF(ST_Sequence) * Parameters.nSequence);
aHistory[0]:= stActual;
fbDelay(IN:= FALSE);
fbTimeout(IN:= FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Await" Id="{1bc0e82b-8467-4f35-a54e-996600fba2bc}">
      <Declaration><![CDATA[METHOD PUBLIC M_Await 
VAR_INPUT
	sMessage:				STRING(255);		
	tTimeout:				TIME;
	tDelay:					TIME;	
	bPause:					BOOL;
	bReturn:				BOOL;
	nNumber:				INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bReturn THEN
	IF tDelay <> T#0S THEN
		fbDelay.PT:= tDelay;
		fbDelay.IN:= TRUE;
		IF fbDelay.Q THEN
			stActual.sMessage:= sMessage;;
			MemCpy(ADR(aHistory[1]), ADR(aHistory[0]), SIZEOF(ST_Sequence) * Parameters.nSequence);
			aHistory[0]:= stActual;
			stActual.nNumber:= nNumber;
			fbDelay(IN:= FALSE);
			IF bPause THEN
				IF iParent.P_Mode = E_RequestMode.Semiauto THEN
					iParent.M_RequestState(E_RequestState.Pause);		
				END_IF
			END_IF
		END_IF
	ELSE
		stActual.sMessage:= sMessage;
		MemCpy(ADR(aHistory[1]), ADR(aHistory[0]), SIZEOF(ST_Sequence) * Parameters.nSequence);
		aHistory[0]:= stActual;
		stActual.nNumber:= nNumber;
		fbTimeout(IN:= FALSE);
		IF bPause THEN
			IF iParent.P_Mode = E_RequestMode.Semiauto THEN
				iParent.M_RequestState(E_RequestState.Pause);		
			END_IF
		END_IF	
	END_IF		
ELSE
	IF tTimeout <> T#0S THEN
		fbTimeout.PT:= tTimeout;
		fbTimeout.IN:= TRUE;
		IF fbTimeout.Q THEN
			iParent.P_Event.M_AddINT(stActual.nNumber);
			iParent.P_Event.M_Stop('Timeout in sequence number %s', 1);
		END_IF
	END_IF
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Restore" Id="{355b1f0f-6639-049b-06c9-6ce477586534}">
      <Declaration><![CDATA[METHOD PUBLIC M_Restore
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stActual:= stRestore;]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Number" Id="{3cc751bf-6092-4aa8-8de5-3276200b64ad}">
      <Declaration><![CDATA[{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'monitoring' := 'call'}
PROPERTY PUBLIC P_Number : INT]]></Declaration>
      <Get Name="Get" Id="{92b3a1f5-52d3-44fe-8629-e1295a1ef489}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Number:= stActual.nNumber;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="P_Message" Id="{449cb871-a246-0a5a-09bf-a919fbfd178f}">
      <Declaration><![CDATA[{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'monitoring' := 'call'}
PROPERTY PUBLIC P_Message : STRING(255)]]></Declaration>
      <Get Name="Get" Id="{38483f3c-0df1-00ca-344c-1ba32b91480e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Message:= stActual.sMessage;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="M_Reset" Id="{4501245b-63d2-4732-9d5e-f656a322de01}">
      <Declaration><![CDATA[METHOD PUBLIC M_Reset
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stActual.nNumber:= E_Sequence.Start;
stActual.sMessage:= 'E_Sequence.Start';
fbDelay(IN:= FALSE);
fbTimeout(IN:= FALSE);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Save" Id="{8097faac-e0ea-037d-0757-09324610c774}">
      <Declaration><![CDATA[METHOD PUBLIC M_Save
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stRestore:= stActual;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{9410888f-1e8d-054b-01cb-f8f70c408f51}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iParent:			I_Component;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iParent:= iParent;]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_History" Id="{cb1a85b8-1509-020d-1784-a04480cb4fa4}">
      <Declaration><![CDATA[{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'monitoring' := 'call'}
{attribute 'suppress_wrn_C0410'}
PROPERTY PUBLIC P_History : REFERENCE TO ARRAY [0..Parameters.nSequence] OF ST_Sequence;]]></Declaration>
      <Set Name="Set" Id="{3178675e-8c77-0184-2ffb-07d5fd3790dd}">
        <Declaration><![CDATA[VAR
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_History REF= aHistory;]]></ST>
        </Implementation>
      </Set>
      <Get Name="Get" Id="{46fc4467-8b25-035c-3de6-0aa4c3271749}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_History REF= aHistory;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>