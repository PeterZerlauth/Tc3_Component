<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Event" Id="{59616103-7f2e-4b6f-81bd-583969a36d28}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Event IMPLEMENTS I_Event
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbList:				FB_ListString;
	iParent:			I_Component;
	iLogger:			I_Logger;
	stAbort:			ST_Event;
	stStop:				ST_Event;	
	stStopCycle:		ST_Event;
	stWarning:			ST_Event;
	stInformation:		ST_Event;
	stDebug:			ST_Event;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://github.com/PeterZerlauth/Tc3_Component]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{be23ffcc-529d-4010-ace3-b17baed191a5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iParent:			I_Component;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iParent:= iParent;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Abort" Id="{55348828-4763-4c06-9dd1-090fa29a8379}">
      <Declaration><![CDATA[METHOD PUBLIC M_Abort : BOOL
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stAbort.Message <> Message THEN
	stAbort.Message:= Message;
	stAbort.Active:= TRUE;
ELSE
	stAbort.Active:= FALSE;	
END_IF
stAbort.Source:= iParent;
stAbort.Instance:= iParent.P_Info.P_Instance;
stAbort.Class:= iParent.P_Info.P_Class;
stAbort.EventType:= E_Event.Error;
stAbort.Timestamp:= F_GetSystemTime();
stAbort.ID:= ID;
stAbort.Printed:= M_Print(Message);
stAbort.Arguments:= M_Arguments();

iParent.M_Request(E_Request.Abort);
IF iLogger <> 0 THEN
	iLogger.M_Log(stAbort);
ELSE
	fbLogger.M_Log(stAbort);		
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddBOOL" Id="{55367f5b-ac71-0a63-095c-881721842948}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddBOOL
VAR_INPUT
	Value: 	bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(BOOL_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddINT" Id="{77c01fd5-65e9-07ed-2cff-a79b9d444c15}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddINT
VAR_INPUT
	Value: 	LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(LINT_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddREAL" Id="{b0c25678-4933-0839-34f0-c4eb0def69fb}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddREAL
VAR_INPUT
	Value: 	Lreal;
	Decimals: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(LREAL_TO_FMTSTR(Value, Decimals, TRUE));
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddSTRING" Id="{8ae81d27-cb47-01bb-2b19-fe8608e777a8}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddSTRING
VAR_INPUT
	Value: STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddTIME" Id="{a7c2a656-d860-0eb9-0cff-1e8b5b1d8573}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddTIME
VAR_INPUT
	Value: 	TIME;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(TIME_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Arguments" Id="{70779266-7b36-4bce-9e6f-049e951fd75a}">
      <Declaration><![CDATA[METHOD INTERNAL M_Arguments : STRING(255)
VAR_INPUT
END_VAR
VAR
	nIndex:			INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE nIndex < fbList. P_Length DO
	M_Arguments:= Concat(Concat(M_Arguments, fbList.M_Index(nIndex)), '$N');
	nIndex:= nIndex + 1;
END_WHILE

fbList.M_Clear();]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Debug" Id="{0a2b992b-2a4a-0251-0210-713b326debf6}">
      <Declaration><![CDATA[METHOD PUBLIC M_Debug : BOOL
VAR_INPUT
	Message:				STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stDebug.Message <> Message THEN
	stDebug.Message:= Message;
	stDebug.Active:= TRUE;
ELSE
	stDebug.Active:= FALSE;	
END_IF
stDebug.Source:= iParent;
stDebug.Instance:= iParent.P_Info.P_Instance;
stDebug.Class:= iParent.P_Info.P_Class;
stDebug.EventType:= E_Event.Debug;
stDebug.Timestamp:= F_GetSystemTime();
stDebug.ID:= '';
stDebug.Printed:= M_Print(Message);
stDebug.Arguments:= M_Arguments();

IF iLogger <> 0 THEN
	iLogger.M_Log(stDebug);
ELSE
	fbLogger.M_Log(stDebug);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Information" Id="{d9a244f2-1d6f-434f-aab4-cad6aacbb94f}">
      <Declaration><![CDATA[METHOD PUBLIC M_Information : BOOL
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stInformation.Message <> Message THEN
	stInformation.Message:= Message;
	stInformation.Active:= TRUE;
ELSE
	stInformation.Active:= FALSE;	
END_IF
stInformation.Source:= iParent;
stInformation.Instance:= iParent.P_Info.P_Instance;
stInformation.Class:= iParent.P_Info.P_Class;
stInformation.EventType:= E_Event.Information;
stInformation.Timestamp:= F_GetSystemTime();
stInformation.ID:= ID;
stInformation.Printed:= M_Print(Message);
stInformation.Arguments:= M_Arguments();

IF iLogger <> 0 THEN
	iLogger.M_Log(stInformation);
ELSE
	fbLogger.M_Log(stInformation);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Print" Id="{c94cd0c6-56df-0b94-2d8d-b10a55caeb26}">
      <Declaration><![CDATA[METHOD INTERNAL M_Print : STRING(255)
VAR_INPUT
	sMessage:		STRING(255);
END_VAR
VAR
	nIndex:		   	DINT;
	nPosition: 		INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[nPosition:= Find(sMessage, '%s');
WHILE nPosition <> 0 DO
	sMessage:= Replace(sMessage, fbList.M_Index(nIndex), 2, nPosition);
	nPosition:= Find(sMessage, '%s');
	nIndex:= nIndex + 1;
END_WHILE
M_Print:= sMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Reset" Id="{31d9e5bb-2957-4381-81b6-d0453bdac8d3}">
      <Declaration><![CDATA[METHOD PUBLIC M_Reset
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Memset(ADR(stAbort), 0, SIZEOF(stAbort));
Memset(ADR(stStop), 0, SIZEOF(stStop));
Memset(ADR(stStopCycle), 0, SIZEOF(stStopCycle));
Memset(ADR(stWarning), 0, SIZEOF(stWarning));
Memset(ADR(stInformation), 0, SIZEOF(stInformation));
Memset(ADR(stDebug), 0, SIZEOF(stDebug));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stop" Id="{648ad3fe-ab2e-0b8d-0134-eed394027742}">
      <Declaration><![CDATA[METHOD PUBLIC M_Stop : BOOL
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stStop.Message <> Message THEN
	stStop.Message:= Message;
	stStop.Active:= TRUE;
ELSE
	stStop.Active:= FALSE;	
END_IF
stStop.Source:= iParent;
stStop.Instance:= iParent.P_Info.P_Instance;
stStop.Class:= iParent.P_Info.P_Class;
stStop.EventType:= E_Event.Error;
stStop.Timestamp:= F_GetSystemTime();
stStop.ID:= ID;
stStop.Printed:= M_Print(Message);
stStop.Arguments:= M_Arguments();

iParent.M_Request(E_Request.Stop);
IF iLogger <> 0 THEN
	iLogger.M_Log(stStop);
ELSE
	fbLogger.M_Log(stStop);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_StopCycle" Id="{2670afd0-b3e6-08da-2c9f-30a65f88768a}">
      <Declaration><![CDATA[METHOD PUBLIC M_StopCycle : BOOL
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stStopCycle.Message <> Message THEN
	stStopCycle.Message:= Message;
	stStopCycle.Active:= TRUE;
ELSE
	stStopCycle.Active:= FALSE;	
END_IF
stStopCycle.Source:= iParent;
stStopCycle.Instance:= iParent.P_Info.P_Instance;
stStopCycle.Class:= iParent.P_Info.P_Class;
stStopCycle.EventType:= E_Event.Error;
stStopCycle.Timestamp:= F_GetSystemTime();
stStopCycle.ID:= ID;
stStopCycle.Arguments:= M_Arguments();

iParent.M_Request(E_Request.StopCycle);
IF iLogger <> 0 THEN
	iLogger.M_Log(stStopCycle);
ELSE
	fbLogger.M_Log(stStopCycle);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Warning" Id="{d443b8bb-774e-487e-80a2-79cf66a0376c}">
      <Declaration><![CDATA[METHOD PUBLIC M_Warning : BOOL
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stWarning.Message <> Message THEN
	stWarning.Message:= Message;
	stWarning.Active:= TRUE;
ELSE
	stWarning.Active:= FALSE;	
END_IF
stWarning.Source:= iParent;
stWarning.Instance:= iParent.P_Info.P_Instance;
stWarning.Class:= iParent.P_Info.P_Class;
stWarning.EventType:= E_Event.Warning;
stWarning.Timestamp:= F_GetSystemTime();
stWarning.ID:= ID;
stWarning.Printed:= M_Print(Message);
stWarning.Arguments:= M_Arguments();

IF iLogger<> 0 THEN
	iLogger.M_Log(stWarning);
ELSE
	fbLogger.M_Log(stWarning);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Logger" Id="{642d0edf-ded0-4248-be29-8384d3180124}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Logger : I_Logger]]></Declaration>
      <Get Name="Get" Id="{99e41819-eb78-4b29-b3e9-6728532b14b1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Logger:= iLogger;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{be31597a-6e88-476b-aec8-980317d6bc1a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iLogger:= P_Logger;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_Event">
      <LineId Id="235" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Abort">
      <LineId Id="267" Count="4" />
      <LineId Id="265" Count="0" />
      <LineId Id="197" Count="5" />
      <LineId Id="277" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="232" Count="1" />
      <LineId Id="247" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="231" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddBOOL">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddINT">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddREAL">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddSTRING">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddTIME">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Arguments">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Debug">
      <LineId Id="69" Count="18" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Information">
      <LineId Id="59" Count="4" />
      <LineId Id="57" Count="0" />
      <LineId Id="11" Count="5" />
      <LineId Id="69" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="49" Count="1" />
      <LineId Id="35" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Print">
      <LineId Id="23" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="34" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Reset">
      <LineId Id="5" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="15" Count="1" />
    </LineIds>
    <LineIds Name="FB_Event.M_Stop">
      <LineId Id="264" Count="2" />
      <LineId Id="268" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="197" Count="5" />
      <LineId Id="274" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="231" Count="1" />
      <LineId Id="248" Count="1" />
      <LineId Id="224" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_StopCycle">
      <LineId Id="263" Count="2" />
      <LineId Id="267" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="197" Count="5" />
      <LineId Id="204" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="231" Count="1" />
      <LineId Id="253" Count="1" />
      <LineId Id="224" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Warning">
      <LineId Id="77" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="12" Count="5" />
      <LineId Id="89" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="64" Count="1" />
      <LineId Id="48" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.P_Logger.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.P_Logger.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>