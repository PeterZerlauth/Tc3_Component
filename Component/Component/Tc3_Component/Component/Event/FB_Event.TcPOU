<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Event" Id="{59616103-7f2e-4b6f-81bd-583969a36d28}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Event IMPLEMENTS I_Event
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbList:				FB_ListString;
	iParent:			I_Component;
	iLogger:			I_Logger;
	stEvent:			ST_Event;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://github.com/PeterZerlauth/Tc3_Component]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{be23ffcc-529d-4010-ace3-b17baed191a5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	iParent:			I_Component;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iParent:= iParent;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Abort" Id="{a968dc5e-d8ee-079a-0799-c81d1c9d2558}">
      <Declaration><![CDATA[METHOD PUBLIC M_Abort
VAR_INPUT
	sMessage:				STRING(255);
	sID:					ID;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Error(sMessage, sID);
iParent.M_Request(E_Request.Abort);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddBOOL" Id="{55367f5b-ac71-0a63-095c-881721842948}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddBOOL
VAR_INPUT
	Value: 	bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(BOOL_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddINT" Id="{77c01fd5-65e9-07ed-2cff-a79b9d444c15}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddINT
VAR_INPUT
	Value: 	LINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(LINT_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddREAL" Id="{b0c25678-4933-0839-34f0-c4eb0def69fb}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddREAL
VAR_INPUT
	Value: 	Lreal;
	Decimals: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(LREAL_TO_FMTSTR(Value, Decimals, TRUE));
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddSTRING" Id="{8ae81d27-cb47-01bb-2b19-fe8608e777a8}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddSTRING
VAR_INPUT
	Value: STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(Value);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_AddTIME" Id="{a7c2a656-d860-0eb9-0cff-1e8b5b1d8573}">
      <Declaration><![CDATA[METHOD PUBLIC M_AddTIME
VAR_INPUT
	Value: 	TIME;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbList.M_Add(TIME_TO_STRING(Value));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Arguments" Id="{70779266-7b36-4bce-9e6f-049e951fd75a}">
      <Declaration><![CDATA[METHOD INTERNAL M_Arguments : STRING(255)
VAR_INPUT
END_VAR
VAR
	nIndex:			INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[WHILE nIndex < fbList. P_Length DO
	M_Arguments:= Concat(Concat(M_Arguments, fbList.M_Index(nIndex)), '$N');
	nIndex:= nIndex + 1;
END_WHILE

fbList.M_Clear();]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Debug" Id="{0a2b992b-2a4a-0251-0210-713b326debf6}">
      <Declaration><![CDATA[METHOD PUBLIC M_Debug
VAR_INPUT
	Message:				STRING(255);
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stEvent.Message:= Message;
stEvent.Source:= iParent;
stEvent.Instance:= iParent.P_Info.P_Instance;
stEvent.Class:= iParent.P_Info.P_Class;
stEvent.EventType:= E_Event.Debug;
stEvent.Timestamp:= F_GetSystemTime();
stEvent.ID:= '';
stEvent.Default:= M_Default(Message);
stEvent.Arguments:= M_Arguments();

IF iLogger <> 0 THEN
	iLogger.M_Log(stEvent);
ELSE
	fbLogger.M_Log(stEvent);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Default" Id="{c94cd0c6-56df-0b94-2d8d-b10a55caeb26}">
      <Declaration><![CDATA[METHOD INTERNAL M_Default : STRING(255)
VAR_INPUT
	sMessage:		STRING(255);
END_VAR
VAR
	nIndex:		   	DINT;
	nPosition: 		INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[nPosition:= Find(sMessage, '%s');
WHILE nPosition <> 0 DO
	sMessage:= Replace(sMessage, fbList.M_Index(nIndex), 2, nPosition);
	nPosition:= Find(sMessage, '%s');
	nIndex:= nIndex + 1;
END_WHILE
M_Default:= sMessage;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Error" Id="{648ad3fe-ab2e-0b8d-0134-eed394027742}">
      <Declaration><![CDATA[METHOD PUBLIC M_Error
VAR_INPUT
	sMessage:				STRING(255);
	sID:					ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stEvent.Message:= sMessage;
stEvent.Source:= iParent;
stEvent.Instance:= iParent.P_Info.P_Instance;
stEvent.Class:= iParent.P_Info.P_Class;
stEvent.EventType:= E_Event.Error;
stEvent.Timestamp:= F_GetSystemTime();
stEvent.ID:= sID;
stEvent.Default:= M_Default(sMessage);
stEvent.Arguments:= M_Arguments();

IF iLogger <> 0 THEN
	iLogger.M_Log(stEvent);
ELSE
	fbLogger.M_Log(stEvent);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Information" Id="{d9a244f2-1d6f-434f-aab4-cad6aacbb94f}">
      <Declaration><![CDATA[METHOD PUBLIC M_Information
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stEvent.Message:= Message;
stEvent.Source:= iParent;
stEvent.Instance:= iParent.P_Info.P_Instance;
stEvent.Class:= iParent.P_Info.P_Class;
stEvent.EventType:= E_Event.Information;
stEvent.Timestamp:= F_GetSystemTime();
stEvent.ID:= ID;
stEvent.Default:= M_Default(Message);
stEvent.Arguments:= M_Arguments();

IF iLogger <> 0 THEN
	iLogger.M_Log(stEvent);
ELSE
	fbLogger.M_Log(stEvent);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stop" Id="{20d0062d-a518-02ec-13ef-e4c8c4295653}">
      <Declaration><![CDATA[METHOD PUBLIC M_Stop
VAR_INPUT
	sMessage:				STRING(255);
	sID:					ID;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Error(sMessage, sID);
iParent.M_Request(E_Request.Stop);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Warning" Id="{d443b8bb-774e-487e-80a2-79cf66a0376c}">
      <Declaration><![CDATA[METHOD PUBLIC M_Warning
VAR_INPUT
	Message:				STRING(255);
	ID:						ID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stEvent.Message:= Message;
stEvent.Source:= iParent;
stEvent.Instance:= iParent.P_Info.P_Instance;
stEvent.Class:= iParent.P_Info.P_Class;
stEvent.EventType:= E_Event.Warning;
stEvent.Timestamp:= F_GetSystemTime();
stEvent.ID:= ID;
stEvent.Default:= M_Default(Message);
stEvent.Arguments:= M_Arguments();

IF iLogger<> 0 THEN
	iLogger.M_Log(stEvent);
ELSE
	fbLogger.M_Log(stEvent);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Logger" Id="{642d0edf-ded0-4248-be29-8384d3180124}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Logger : I_Logger]]></Declaration>
      <Get Name="Get" Id="{99e41819-eb78-4b29-b3e9-6728532b14b1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Logger:= iLogger;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{be31597a-6e88-476b-aec8-980317d6bc1a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[iLogger:= P_Logger;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="FB_Event">
      <LineId Id="235" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.FB_init">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Abort">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddBOOL">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddINT">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddREAL">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddSTRING">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_Event.M_AddTIME">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Arguments">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Debug">
      <LineId Id="110" Count="13" />
      <LineId Id="32" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Default">
      <LineId Id="23" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="34" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Error">
      <LineId Id="325" Count="0" />
      <LineId Id="330" Count="7" />
      <LineId Id="339" Count="4" />
      <LineId Id="224" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Information">
      <LineId Id="60" Count="0" />
      <LineId Id="11" Count="5" />
      <LineId Id="69" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="33" Count="1" />
      <LineId Id="49" Count="1" />
      <LineId Id="35" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Stop">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.M_Warning">
      <LineId Id="79" Count="0" />
      <LineId Id="12" Count="5" />
      <LineId Id="89" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="64" Count="1" />
      <LineId Id="48" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.P_Logger.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Event.P_Logger.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>