<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Component" Id="{3beb4649-c557-0131-2fab-e053b34b5bbf}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'} 
{attribute 'no_explicit_call' := 'do not call this POU directly'} 
FUNCTION_BLOCK FB_Component EXTENDS FB_Cycle IMPLEMENTS I_Component
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbInfo:						FB_Info(sInstancePath);
	fbObserver:					FB_Observer;
	fbEvent:					FB_Event(THIS^);
    {attribute 'hide'}
	{attribute 'instance-path'} 
    {attribute 'noinit'}
    sInstancePath:				STRING(255);
	{ attribute 'TcHmiSymbol' }
	{attribute 'OPC.UA.DA' := '1'}
	eRequest:					E_Request;
    {attribute 'hide'}
	eRequestPrevious:			E_Request;
	{attribute 'OPC.UA.DA' := '1'}
	{ attribute 'TcHmiSymbol' }
	eState:						E_State;
    {attribute 'hide'}
	eStatePrevious:				E_State;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="States" Id="{ca15ba5f-c875-08b1-19c6-3566ddf8fed6}">
      <Folder Name="Abort" Id="{3d99bd66-30c9-004d-3e80-7bc3c0954972}" />
      <Folder Name="Complete" Id="{fda3c2c7-19c6-0694-390f-620cd0abc07e}" />
      <Folder Name="Hold" Id="{eb6fbb33-e8ef-04bc-0ce9-e56561750e54}" />
      <Folder Name="Pause" Id="{ed00919f-5b25-0398-104b-afdcd97403e2}" />
      <Folder Name="Reset" Id="{8cf27981-268d-0ccc-14a8-0a2a8e2fe09a}" />
      <Folder Name="Start" Id="{41773563-f8b8-0192-37eb-047bec04c52c}" />
      <Folder Name="Stop" Id="{d9710ae0-c4b2-0dcc-0028-60796c483775}" />
    </Folder>
    <Method Name="M_Aborted" Id="{f47ae709-6b97-0869-103e-462a949d9bd1}" FolderPath="States\Abort\">
      <Declaration><![CDATA[METHOD PROTECTED M_Aborted : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Aborted
M_Aborted:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Aborting" Id="{5420cd8c-8440-0133-17b0-cfc9fa3a226e}" FolderPath="States\Abort\">
      <Declaration><![CDATA[METHOD PROTECTED M_Aborting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Aborting
M_Aborting:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Call" Id="{8157620c-1844-0b4a-092c-fe72147fa392}">
      <Declaration><![CDATA[METHOD PUBLIC M_Call
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbInfo();
fbObserver();
fbEvent();

// Handle Module Type Package states
CASE eState OF
	E_State.Undefined:
		IF M_Initialise() THEN
			eState:= E_State.Idle;					
		END_IF
		
	E_State.Resetting:
		CASE eRequest OF
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;						
		END_CASE
		IF M_Resetting() THEN
			fbEvent.M_Reset();
			eState:= E_State.Idle;
		END_IF
		
	E_State.Idle:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Start:
				eState:= E_State.Starting;
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;
			ELSE
				eRequest:= E_Request.Undefined;						
		END_CASE
		M_Idle();
		
	E_State.Starting:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;				
		END_CASE	
		IF M_Starting() THEN
			eState:= E_State.Execute;	
		END_IF		

	E_State.Execute:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Pause:
				eState:= E_State.Pausing;		
			E_Request.Hold:
				eState:= E_State.Holding;
			E_Request.StopCycle,	E_Request.Complete:;
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;
			ELSE
				eRequest:= E_Request.Undefined;						
		END_CASE
		IF M_Execute() THEN
			CASE eRequest OF
				E_Request.StopCycle:
					eState:= E_State.Stopping;
				E_Request.Complete:
					eState:= E_State.Completing;
			END_CASE	
		END_IF
		
	E_State.Stopping:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Abort:
				eState:= E_State.Aborting;			
		END_CASE	
		IF M_Stopping() THEN
			eState:= E_State.Stopped;
		END_IF

	E_State.Stopped:
		CASE eRequest OF
			E_Request.Abort:
				eState:= E_State.Aborting;			
		END_CASE
		IF M_Stopped() THEN
			CASE eRequest OF
				E_Request.Reset:
					eState:= E_State.Resetting;
				ELSE
					eRequest:= E_Request.Undefined;	
			END_CASE		
		END_IF
		
	E_State.Aborting:
		IF M_Aborting() THEN
			eState:= E_State.Aborted;
		END_IF
		
	E_State.Aborted:
		IF M_Aborted() THEN
			CASE eRequest OF
				E_Request.Reset:
					eState:= E_State.Resetting;
				ELSE
					eRequest:= E_Request.Undefined;		
			END_CASE
		END_IF
		
	E_State.Pausing:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;					
		END_CASE	
		IF M_Pausing() THEN
			eState:= E_State.Paused;
		END_IF
	
	E_State.Paused:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;
			ELSE
				eRequest:= E_Request.Undefined;					
		END_CASE	
		IF M_Paused() THEN
			eState:= E_State.Resuming;			
		END_IF	
		
	E_State.Resuming:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;					
		END_CASE
		IF M_Resuming() THEN
			eState:= E_State.Execute;
		END_IF

	E_State.Holding:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;						
		END_CASE
		IF M_Holding() THEN
			eState:= E_State.Held;
		END_IF

	E_State.Held:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;
			ELSE
				eRequest:= E_Request.Undefined;					
		END_CASE
		IF M_Held() THEN
			eState:= E_State.Unholding;			
		END_IF	
		
	E_State.Unholding:
		CASE eRequest OF
			E_Request.Reset:
				M_Resetting();
				eRequest:= E_Request.Undefined;	
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;							
		END_CASE
		IF M_Unholding() THEN
			eState:= E_State.Execute;
		END_IF
		
	E_State.Completing:
		CASE eRequest OF
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;				
		END_CASE
		IF M_Completing() THEN
			eState:= E_State.Completed;
		END_IF
		
	E_State.Completed:
		CASE eRequest OF
			E_Request.Stop:
				eState:= E_State.Stopping;					
			E_Request.Abort:
				eState:= E_State.Aborting;
			ELSE
				eRequest:= E_Request.Undefined;				
		END_CASE
		IF M_Completed() THEN
			CASE eRequest OF
				E_Request.Reset:	
					eState:= E_State.Resetting;
			END_CASE
		END_IF
		
	
END_CASE

CASE eState OF
	E_State.Aborted, E_State.Stopped, E_State.Completed:;
ELSE		
	this^.M_Running();
END_CASE

IF eRequestPrevious <> eRequest THEN
	eRequestPrevious:= eRequest;
	CASE eRequest OF
		E_Request.Abort, E_Request.Stop, E_Request.StopCycle, E_Request.Hold, E_Request.Pause, E_Request.Reset:
			fbObserver.M_Notify(eRequest);
	END_CASE
END_IF

// Detect state changed
IF eStatePrevious <> eState THEN
	eStatePrevious:= eState;
	M_OnStateChanged();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Completed" Id="{47ba5a0a-8800-0f93-2645-874f5aa969a5}" FolderPath="States\Complete\">
      <Declaration><![CDATA[METHOD PROTECTED M_Completed : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Complete
M_Completed:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Completing" Id="{a6f0ed18-708c-02a1-0990-4f4a1b2b5a3a}" FolderPath="States\Complete\">
      <Declaration><![CDATA[METHOD PROTECTED M_Completing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Completing
M_Completing:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Execute" Id="{0a26e879-26ba-0448-077b-265f6eb411a3}" FolderPath="States\Start\">
      <Declaration><![CDATA[METHOD PROTECTED M_Execute : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Execute
M_Execute:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Held" Id="{f81e94c9-4b34-0591-0431-3c8c41c7dc3f}" FolderPath="States\Hold\">
      <Declaration><![CDATA[METHOD PROTECTED M_Held : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Held
M_Held:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Holding" Id="{0453e1ef-1254-097d-2836-c180f9c76437}" FolderPath="States\Hold\">
      <Declaration><![CDATA[METHOD PROTECTED M_Holding : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Holding
M_Holding:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Idle" Id="{ee6be811-c2b8-059d-2e73-08e8c6ee3020}" FolderPath="States\">
      <Declaration><![CDATA[METHOD PROTECTED M_Idle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Idle]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Initialise" Id="{25962ce0-1492-0d73-2226-fd61bbb69809}" FolderPath="States\">
      <Declaration><![CDATA[METHOD PROTECTED M_Initialise : BOOL;
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Undefined
M_Initialise:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_OnNotify" Id="{d8f6f158-ff95-0e77-1e0e-c4742a312f00}">
      <Declaration><![CDATA[METHOD PUBLIC M_OnNotify
VAR_INPUT
	eRequest:					E_Request;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Request(eRequest);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_OnStateChanged" Id="{8fb34de3-43b0-012b-124e-30a6b61246a4}">
      <Declaration><![CDATA[METHOD PROTECTED M_OnStateChanged : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Paused" Id="{2c298a87-8477-08fb-1e4e-6f14369f8f00}" FolderPath="States\Pause\">
      <Declaration><![CDATA[METHOD PROTECTED M_Paused : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Held
M_Paused:= TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Pausing" Id="{c4aa5598-07e6-01cf-3056-2987866628ee}" FolderPath="States\Pause\">
      <Declaration><![CDATA[METHOD PROTECTED M_Pausing : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Holding
M_Pausing:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Request" Id="{bdd740c0-4464-0c1b-399c-16ea1aed66b8}">
      <Declaration><![CDATA[METHOD PUBLIC M_Request : BOOL
VAR_INPUT
	eRequest:	E_Request;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.eRequest < eRequest THEN
	THIS^.eRequest:= eRequest;
	CASE eRequest OF
		E_Request.Undefined:
			M_Request:= TRUE;
			
		E_Request.Start:
			M_Request:= eState = E_State.Execute;
			
		E_Request.Pause:
			IF 	fbEvent.bIngorePause THEN
				M_Request:= TRUE;
			ELSE
				M_Request:= eState = E_State.Paused;
			END_IF
			
		E_Request.Hold:
			IF 	fbEvent.bIngoreHold THEN
				M_Request:= TRUE;
			ELSE
				M_Request:= eState = E_State.Held;		
			END_IF
			
		E_Request.Complete:
			M_Request:= eState = E_State.Completed;
			
		E_Request.StopCycle:
			M_Request:= eState = E_State.Stopped;	
			
		E_Request.Stop:
			M_Request:= eState = E_State.Stopped;
			
		E_Request.Abort:
			M_Request:= eState = E_State.Aborted;
	
		E_Request.Reset:
			M_Request:= eState = E_State.Idle;		
	
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resetting" Id="{9e5fa12d-dc9f-0271-3ab1-62fbd4e3c4cb}" FolderPath="States\Reset\">
      <Declaration><![CDATA[METHOD PROTECTED M_Resetting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Resetting
M_Resetting:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resuming" Id="{811e0c52-9853-075c-3d1b-5e25fdee4124}" FolderPath="States\Pause\">
      <Declaration><![CDATA[METHOD PROTECTED M_Resuming : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Holding
M_Resuming:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Running" Id="{c183b15a-6638-0cac-2cc8-e5cd884bfdf8}" FolderPath="States\">
      <Declaration><![CDATA[METHOD PROTECTED M_Running
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{7b4cc2a9-4be8-0ad5-3afd-3314d7249ec2}" FolderPath="States\Start\">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Starting
M_Starting:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stopped" Id="{415168e7-f2ee-0214-0037-987f9ecb70ed}" FolderPath="States\Stop\">
      <Declaration><![CDATA[METHOD PROTECTED M_Stopped : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Stopped
M_Stopped:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stopping" Id="{752f6f5c-84eb-0065-086e-87701d5b75a9}" FolderPath="States\Stop\">
      <Declaration><![CDATA[METHOD PROTECTED M_Stopping : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Stopping
M_Stopping:= True;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Unholding" Id="{38e86df5-306b-0975-32bb-19e03b5147dc}" FolderPath="States\Hold\">
      <Declaration><![CDATA[METHOD PROTECTED M_Unholding : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// State Holding
M_Unholding:= True;]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Event" Id="{4af7c41c-ce75-074c-247b-1e9cde87d3d0}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Event : I_Event]]></Declaration>
      <Get Name="Get" Id="{581dbbf1-1871-0bc4-2167-11bb575e35b8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Event:= fbEvent;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="P_Info" Id="{1f2686a8-22c2-03c1-3b18-3cdd0f1b6158}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Info : I_Info]]></Declaration>
      <Get Name="Get" Id="{80d9a233-1863-0529-037a-9eeb24a670c8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Info:= fbInfo;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="P_Observer" Id="{5a2ea21c-aedb-0c6a-2f12-df08356b98aa}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Observer : I_Observer]]></Declaration>
      <Get Name="Get" Id="{a355a491-866b-0089-1d02-e50cef149847}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Observer:= fbObserver;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="P_State" Id="{b623cabe-ac07-05b3-3398-a07000fa3104}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_State : E_State]]></Declaration>
      <Get Name="Get" Id="{f9b2e5f6-eb20-00e6-39d5-99b5e96a63c5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_State:= eState;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_Component">
      <LineId Id="160" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Aborted">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Aborting">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Call">
      <LineId Id="6" Count="18" />
      <LineId Id="220" Count="0" />
      <LineId Id="25" Count="4" />
      <LineId Id="224" Count="2" />
      <LineId Id="30" Count="12" />
      <LineId Id="228" Count="1" />
      <LineId Id="227" Count="0" />
      <LineId Id="43" Count="10" />
      <LineId Id="231" Count="1" />
      <LineId Id="230" Count="0" />
      <LineId Id="54" Count="3" />
      <LineId Id="276" Count="0" />
      <LineId Id="58" Count="8" />
      <LineId Id="274" Count="1" />
      <LineId Id="67" Count="6" />
      <LineId Id="234" Count="1" />
      <LineId Id="233" Count="0" />
      <LineId Id="74" Count="7" />
      <LineId Id="258" Count="0" />
      <LineId Id="262" Count="1" />
      <LineId Id="257" Count="0" />
      <LineId Id="82" Count="25" />
      <LineId Id="237" Count="1" />
      <LineId Id="236" Count="0" />
      <LineId Id="108" Count="10" />
      <LineId Id="240" Count="1" />
      <LineId Id="239" Count="0" />
      <LineId Id="119" Count="12" />
      <LineId Id="243" Count="1" />
      <LineId Id="242" Count="0" />
      <LineId Id="132" Count="10" />
      <LineId Id="246" Count="1" />
      <LineId Id="245" Count="0" />
      <LineId Id="143" Count="10" />
      <LineId Id="249" Count="1" />
      <LineId Id="248" Count="0" />
      <LineId Id="154" Count="12" />
      <LineId Id="252" Count="1" />
      <LineId Id="251" Count="0" />
      <LineId Id="167" Count="43" />
      <LineId Id="284" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="288" Count="2" />
      <LineId Id="287" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="211" Count="2" />
      <LineId Id="215" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Completed">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Completing">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Execute">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Held">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Holding">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Idle">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Initialise">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_OnNotify">
      <LineId Id="72" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_OnStateChanged">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Paused">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Pausing">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Request">
      <LineId Id="9" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="60" Count="2" />
      <LineId Id="100" Count="0" />
      <LineId Id="63" Count="1" />
      <LineId Id="99" Count="0" />
      <LineId Id="65" Count="5" />
      <LineId Id="98" Count="0" />
      <LineId Id="71" Count="8" />
      <LineId Id="94" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="80" Count="1" />
      <LineId Id="96" Count="0" />
      <LineId Id="82" Count="1" />
      <LineId Id="97" Count="0" />
      <LineId Id="84" Count="2" />
      <LineId Id="50" Count="1" />
    </LineIds>
    <LineIds Name="FB_Component.M_Resetting">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Resuming">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Running">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Starting">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Stopped">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Stopping">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.M_Unholding">
      <LineId Id="9" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.P_Event.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.P_Info.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.P_Observer.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component.P_State.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>