<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Module" Id="{0d3fc497-598e-0d21-1617-ce19be6391a0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Module EXTENDS FB_Component IMPLEMENTS I_Module
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	fbLogging:					FB_LoggingProvider;
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	eModeRequest:					E_Mode:= E_Mode.Automatic;				// Requested mod
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '2'}
	eMode:							E_Mode;				// Current mode
	{attribute 'hide'}
	eModePrevious:					E_Mode;				// Previous mode
	
	fbLevel1:					FB_Level;
	fbLevel2:					FB_Level;
	fbLevel3:					FB_Level;
	fbLevel4:					FB_Level;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://peterzerlauth.com/
SUPER^();

// Detect mode changes
IF eModeRequest <> E_Mode.Undefined THEN
	IF eMode <> eModeRequest THEN
		eModePrevious:= eMode;
		eMode:= eModeRequest;
		M_OnMode(eMode, eModePrevious);
	END_IF
END_IF
eModeRequest:= E_Mode.Undefined;]]></ST>
    </Implementation>
    <Method Name="M_Mode" Id="{8661b760-0fa5-007a-151c-7fe805544fbb}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable':='1'}
METHOD PUBLIC M_Mode : BOOL
VAR_INPUT
	eMode:		E_Mode;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.eMode = eMode THEN
	M_Mode:= TRUE;
ELSE
	eModeRequest:= eMode;	
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_OnMode" Id="{549d817a-659a-0f3e-10ea-6f23f3ce8adf}">
      <Declaration><![CDATA[METHOD PROTECTED M_OnMode
VAR_INPUT
	eMode:							E_Mode;						// Current mode
	eModePrevious:					E_Mode;						// Previous mode	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eMode OF
	E_Mode.Semiauto, E_Mode.Automatic:
		IF eModePrevious = E_Mode.Manual THEN
			fbEvent.M_AddSTRING(TO_STRING(eModePrevious));
			fbEvent.M_AddSTRING(TO_STRING(eMode));
			fbEvent.M_Abort('Module mode changed form %s to %s', 1002);
		END_IF
	E_Mode.Manual:
		;
END_CASE

fbSequence.bStopAfter:= eMode = E_Mode.Semiauto;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resetting" Id="{2bb3289b-4652-0e64-25bf-a33d29c7e27c}">
      <Declaration><![CDATA[METHOD PROTECTED M_Resetting : BOOL (* Return state complete*)
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Resetting:= fbLevel4.M_Request(E_Request.Start)
			AND_THEN fbLevel3.M_Request(E_Request.Start)
			AND_THEN fbLevel2.M_Request(E_Request.Start);  ]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{135a0682-e20d-03f7-3967-31f0024ffcc4}">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL (* Return state complete*)
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Starting:= fbLevel1.M_Request(E_Request.Start);]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Mode" Id="{a773e62d-20bd-0c96-369b-0f3305d57073}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Mode : E_Mode]]></Declaration>
      <Get Name="Get" Id="{0b059178-babf-076f-2ccc-02e13582bfc7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Mode:= eMode;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>