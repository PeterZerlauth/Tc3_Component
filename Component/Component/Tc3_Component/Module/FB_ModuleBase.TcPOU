<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_ModuleBase" Id="{0d3fc497-598e-0d21-1617-ce19be6391a0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ModuleBase EXTENDS FB_Component
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	bError:						BOOL;		// @ToDo
	bWarning:					BOOL;
	bInformation:				BOOL;
	aEvent:						ARRAY [0..Parameters.nEvents] OF ST_Event;	
	fbLoggerFactory:			FB_LoggerFactory(ADR(aEvent), Parameters.nEvents);
	fbTcLogger:					FB_TcLogger;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_Aborted" Id="{0b832f7f-4585-09d1-3d1d-4466841374ad}">
      <Declaration><![CDATA[METHOD PROTECTED M_Aborted
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.M_Aborted();
fbEvent.M_AddSTRING(P_ID);
fbEvent.M_Information('Module %s aborted, reset', '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Attach" Id="{579d130b-ed70-0843-1869-7cfcfab74d3d}">
      <Declaration><![CDATA[METHOD PUBLIC M_Attach
VAR_INPUT
	Component:		I_Component;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Component.P_Event.P_Logger:= fbLoggerFactory;
Component.P_Observer.M_Attach(THIS^);
fbObserver.M_Attach(Component);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Cycle" Id="{ba6e3712-faea-4bef-b491-24a585067e68}">
      <Declaration><![CDATA[METHOD PUBLIC M_Cycle
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbLoggerFactory();

SUPER^.M_Cycle();]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Dettach" Id="{a667402b-5023-09c1-34b6-30ca3f961f61}">
      <Declaration><![CDATA[METHOD PUBLIC M_Dettach
VAR_INPUT
	Component:		I_Component;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Component.P_Event.P_Logger:= 0;
Component.P_Observer.M_Detach(THIS^);
fbObserver.M_Detach(Component);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Idle" Id="{6e9b6a1a-c168-0e2f-3b3d-1c86715a124a}">
      <Declaration><![CDATA[METHOD PROTECTED M_Idle
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.M_Idle();
fbEvent.M_AddSTRING(P_ID);
fbEvent.M_Information('Module %s not started', '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Initialise" Id="{d2ecc479-1ed6-0218-1db6-cf2c288ac295}">
      <Declaration><![CDATA[METHOD PROTECTED M_Initialise
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.M_Initialise();
fbEvent.P_Logger:= fbLoggerFactory;
fbLoggerFactory.M_Attach(fbTcLogger);
	
	



]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_OnMode" Id="{8aa684a1-26e4-029d-2fa8-0e0341c2e439}">
      <Declaration><![CDATA[METHOD Protected M_OnMode
VAR_INPUT
	eMode:							E_Mode;						// Current mode
	eModePrevious:					E_Mode;						// Previous mode	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE eMode OF
	E_Mode.Semiauto, E_Mode.Automatic:
		IF eModePrevious = E_Mode.Manual THEN
			fbEvent.M_AddSTRING(P_ID);
			fbEvent.M_Abort('Module %s was in manual mode', '');
		END_IF
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resetting" Id="{61e3d89a-8bee-473b-9814-ba7482888f16}">
      <Declaration><![CDATA[METHOD PROTECTED M_Resetting : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Resetting:= SUPER^.M_Resetting();
fbLoggerFactory.M_Reset();]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resuming" Id="{d9ef3688-d135-0f0b-1ce4-980e688e3f9f}">
      <Declaration><![CDATA[METHOD PROTECTED M_Resuming : BOOL // Return state complete
VAR_INPUT
END_VAR
VAR
	nIndex:					DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Resuming:= TRUE;
WHILE nIndex < fbObserver.nLength DO
	M_Resuming:= M_Resuming AND fbObserver.M_Index(nIndex).M_Request(E_Request.Start);
	nIndex:= nIndex +1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Running" Id="{8879f60a-43a4-0568-363b-e25a42eddf0c}">
      <Declaration><![CDATA[METHOD PROTECTED M_Running
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Starting" Id="{5a9fb78b-3ed4-0195-387d-72e3c96a0cbd}">
      <Declaration><![CDATA[METHOD PROTECTED M_Starting : BOOL
VAR_INPUT
END_VAR
VAR
	nIndex:					DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Starting:= TRUE;
WHILE nIndex < fbObserver.nLength DO
	M_Starting:= M_Starting AND fbObserver.M_Index(nIndex).M_Request(E_Request.Start);
	nIndex:= nIndex +1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stopped" Id="{43b02a69-b318-0eb0-3e6f-2d210026cf6d}">
      <Declaration><![CDATA[METHOD PROTECTED M_Stopped
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.M_Stopped();
fbEvent.M_AddSTRING(P_ID);
fbEvent.M_Information('Module %s stopped, reset', '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Unholding" Id="{e6d01443-ae5b-0242-3775-c5c307506d4e}">
      <Declaration><![CDATA[METHOD PROTECTED M_Unholding : BOOL // Return state complete
VAR_INPUT
END_VAR
VAR
	nIndex:					DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_Unholding:= TRUE;
WHILE nIndex < fbObserver.nLength DO
	M_Unholding:= M_Unholding AND fbObserver.M_Index(nIndex).M_Request(E_Request.Start);
	nIndex:= nIndex +1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ModuleBase">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Aborted">
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Attach">
      <LineId Id="7" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Cycle">
      <LineId Id="11" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Dettach">
      <LineId Id="7" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Idle">
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Initialise">
      <LineId Id="106" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="21" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_OnMode">
      <LineId Id="7" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="21" Count="1" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Resetting">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Resuming">
      <LineId Id="6" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Running">
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Starting">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Stopped">
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ModuleBase.M_Unholding">
      <LineId Id="10" Count="3" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>