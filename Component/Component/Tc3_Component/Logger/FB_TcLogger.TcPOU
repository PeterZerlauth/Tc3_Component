<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_TcLogger" Id="{ddc02bc3-8c6f-0c3d-1061-0b0de2ad9344}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TcLogger IMPLEMENTS I_Logger
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT

END_VAR
VAR
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_Log" Id="{45359bc4-a12b-01a0-3adc-2db5ec137489}">
      <Declaration><![CDATA[METHOD M_Log
VAR_INPUT
	stEvent	: 		ST_Event;
END_VAR

VAR
	sMessage:			STRING(255);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF stEvent.New THEN
	sMessage:= Concat(Concat(stEvent.Instance, ' | '), stEvent.Message);
	CASE stEvent.EventType OF
		E_Event.Error:
			ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_ERROR , msgFmtStr := sMessage, strArg := '');
		E_Event.Warning:
			ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_WARN , msgFmtStr := sMessage, strArg := '');
		E_Event.Information:
			ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_HINT , msgFmtStr := sMessage, strArg := '');
		E_Event.Debug:
			ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_HINT, msgFmtStr := sMessage, strArg := '');
		E_Event.Verbose:
			ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_HINT , msgFmtStr := sMessage, strArg := '');
	END_CASE
END_IF





]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TcLogger">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_TcLogger.M_Log">
      <LineId Id="56" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="62" Count="10" />
      <LineId Id="58" Count="1" />
      <LineId Id="57" Count="0" />
      <LineId Id="46" Count="0" />
      <LineId Id="42" Count="2" />
      <LineId Id="35" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>