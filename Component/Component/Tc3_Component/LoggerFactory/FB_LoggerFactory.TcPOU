<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_LoggerFactory" Id="{14a5296c-b52d-02f9-2d9e-abab1d7b93f2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_LoggerFactory IMPLEMENTS I_Logger
VAR
	fbList:						FB_ListLogger;
	nLength:					DINT;
	aEvent:						ARRAY [0..Parameters.nEvents] OF ST_Event;	
	nIndex: 					DINT;
	stTags:						ST_LoggerFactoryTags;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// https://github.com/PeterZerlauth/Tc3_Component

// Deactivate old events
stTags.bInformation:= FALSE;
stTags.bWarning:= FALSE;
stTags.bError:= FALSE;
stTags.bPause:= FALSE;
stTags.bHold:= FALSE;
stTags.bComplete:= FALSE;

nIndex:= 0;
WHILE nIndex < nLength DO
	stTags.bPause S= aEvent[nIndex].stFlags.bPause;
	stTags.bHold S= aEvent[nIndex].stFlags.bHold;
	stTags.bComplete S= aEvent[nIndex].stFlags.bComplete;
	CASE aEvent[nIndex].eEventType OF
		E_Event.Error:
			stTags.bError:= TRUE;
		E_Event.Warning:
			stTags.bWarning:= TRUE;	
		E_Event.Information:
			stTags.bInformation:= TRUE;
	END_CASE

	IF aEvent[nIndex].stFlags.bActive THEN
		IF aEvent[nIndex].stFlags.bRemove THEN
			aEvent[nIndex].stFlags.bActive:= FALSE;
		END_IF
	ELSE
		M_Remove(nIndex);
	END_IF
	nIndex := nIndex + 1;
END_WHILE]]></ST>
    </Implementation>
    <Method Name="M_Attach" Id="{85d5015d-7e39-4cfd-a721-66b108eef110}">
      <Declaration><![CDATA[METHOD PUBLIC M_Attach
VAR_INPUT
	Logger:		I_Logger;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Attach
fbList.M_Add(Logger);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Dettach" Id="{693d57be-522c-4fd2-923e-e39bc4f52f84}">
      <Declaration><![CDATA[METHOD PUBLIC M_Dettach
VAR_INPUT
	Logger:		I_Logger;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Dettach
fbList.M_Remove(Logger);]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Find" Id="{57ee7645-77de-477e-aa71-8b5ff862f016}">
      <Declaration><![CDATA[METHOD PUBLIC M_Find : DINT
VAR_INPUT
	stEvent:	ST_Event;
END_VAR
VAR 
	nIndex:		DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Find event in buffer
M_Find := -1;
WHILE nIndex < nLength DO
	IF (aEvent[nIndex].iSource = stEvent.iSource) AND_THEN
    	(aEvent[nIndex].eEventType = stEvent.eEventType) AND_THEN
		(aEvent[nIndex].sInstance = stEvent.sInstance) AND_THEN
		(aEvent[nIndex].sClass = stEvent.sClass) AND_THEN
		(aEvent[nIndex].sMessage = stEvent.sMessage) THEN
        M_Find := nIndex;
        RETURN;
    END_IF
	nIndex := nIndex + 1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Log" Id="{970a1cce-913f-4f52-a720-54d7dfe3d1a3}">
      <Declaration><![CDATA[METHOD PUBLIC M_Log
VAR_INPUT
	stEvent:		ST_Event;
END_VAR
VAR
	nIndex:			DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF (nIndex:=  M_Find(stEvent)) >= 0 THEN
	// Update existing events
	aEvent[nIndex].sArguments:= stEvent.sArguments;
	aEvent[nIndex].sDefault:= stEvent.sDefault;
	aEvent[nIndex].stFlags:= stEvent.stFlags;
ELSE
	// add new event
	aEvent[nLength].stFlags:= stEvent.stFlags;
	aEvent[nLength]:= stEvent;
	nLength:= nLength + 1;
	// Publish to Subscribers
	M_Publish(stEvent);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Publish" Id="{578d5b47-6fac-0518-1a61-62b0162be35c}">
      <Declaration><![CDATA[METHOD M_Publish
VAR_INPUT
	stEvent:	ST_Event;
END_VAR
VAR 
	nIndex:		DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Publis event
WHILE nIndex < fbList.P_Length DO
	fbList.M_Index(nIndex).M_Log(stEvent);
	nIndex := nIndex + 1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Remove" Id="{a03dc35c-ef8e-043d-3adb-f11c8fb4c08b}">
      <Declaration><![CDATA[METHOD PUBLIC M_Remove : Bool
VAR_INPUT
	Index:		DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Remove event
MEMCPY(ADR(aEvent[Index]), ADR(aEvent[Index + 1]), SIZEOF(ST_Event) * DINT_TO_UDINT(Parameters.nEvents - nLength));
nLength:= nLength - 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Reset" Id="{9e416491-698f-0c93-2f87-8032ff6306d1}">
      <Declaration><![CDATA[METHOD PUBLIC M_Reset
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Reset all events
nLength:= 0;
Memset(ADR(aEvent), 0, SIZEOF(aEvent));]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Start" Id="{14c523fa-9279-0bfe-11e3-526c8259ca8b}">
      <Declaration><![CDATA[METHOD PUBLIC M_Start
VAR_INPUT
END_VAR
VAR 
	nIndex:		DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[nIndex:= 0;
WHILE nIndex < nLength DO
	aEvent[nIndex].stFlags.bHold:= FALSE;
	aEvent[nIndex].stFlags.bPause:= FALSE;	
	nIndex := nIndex + 1;
END_WHILE]]></ST>
      </Implementation>
    </Method>
    <Property Name="P_Tags" Id="{aa97ad6f-6c2a-0d8a-3f9e-b5681b8171f9}">
      <Declaration><![CDATA[PROPERTY PUBLIC P_Tags : REFERENCE TO ST_LoggerFactoryTags]]></Declaration>
      <Get Name="Get" Id="{da52fba9-bbdb-0eeb-185e-2f31a3d187cf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[P_Tags ref= stTags;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <LineIds Name="FB_LoggerFactory">
      <LineId Id="370" Count="0" />
      <LineId Id="336" Count="1" />
      <LineId Id="437" Count="0" />
      <LineId Id="439" Count="4" />
      <LineId Id="438" Count="0" />
      <LineId Id="338" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="409" Count="0" />
      <LineId Id="422" Count="3" />
      <LineId Id="427" Count="0" />
      <LineId Id="434" Count="1" />
      <LineId Id="428" Count="0" />
      <LineId Id="430" Count="0" />
      <LineId Id="426" Count="0" />
      <LineId Id="408" Count="0" />
      <LineId Id="340" Count="0" />
      <LineId Id="377" Count="0" />
      <LineId Id="341" Count="0" />
      <LineId Id="380" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="362" Count="0" />
      <LineId Id="352" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Attach">
      <LineId Id="10" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Dettach">
      <LineId Id="10" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Find">
      <LineId Id="110" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="93" Count="10" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Log">
      <LineId Id="112" Count="1" />
      <LineId Id="115" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="117" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="161" Count="2" />
      <LineId Id="141" Count="0" />
      <LineId Id="122" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Publish">
      <LineId Id="17" Count="0" />
      <LineId Id="8" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Remove">
      <LineId Id="13" Count="0" />
      <LineId Id="7" Count="1" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Reset">
      <LineId Id="26" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.M_Start">
      <LineId Id="38" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="58" Count="1" />
      <LineId Id="33" Count="0" />
    </LineIds>
    <LineIds Name="FB_LoggerFactory.P_Tags.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>